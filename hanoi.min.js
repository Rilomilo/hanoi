let step_ls=[],pointer=0;function Step(a,b){this.a=a,this.b=b}function move(a,b){step_ls.push(new Step(a,b))}function hanoi(n,a,b,c,d){n>=2?(hanoi(n-2,a,d,b,c),move(a,c),move(a,b),move(c,b),hanoi(n-2,d,b,a,c)):1==n&&move(a,b)}function initiateGame(level){let plates=document.querySelectorAll(".plate");for(let i=0;i<plates.length;i++)plates[i].parentElement.removeChild(plates[i]);step_ls=[],pointer=0,document.querySelector(".counter span").innerHTML=pointer;let first_tower=document.querySelectorAll(".tower")[0];hanoi(level,1,2,3,4);for(let i=1;i<=level;i++)first_tower.appendChild(createPlate(i))}function createPlate(i){let newplate=document.createElement("div");return newplate.setAttribute("class",`plate p${i}`),newplate}function applyChange(source_tower,des_tower){try{let plate=source_tower.querySelectorAll(".plate")[0];source_tower.removeChild(plate),des_tower.prepend(plate),document.querySelector(".counter span").innerHTML=pointer}catch{vm.$message.error("移动错误")}}document.querySelector("#next").addEventListener("click",(function(){if(pointer>=step_ls.length)return void vm.$message.error("已经到达最后一步");let step=step_ls[pointer++],towers=document.querySelectorAll(".tower"),source_tower,des_tower;applyChange(towers[step.a-1],towers[step.b-1])})),document.querySelector("#pre").addEventListener("click",(function(){if(0==pointer)return void vm.$message.error("已经到达第一步");let step=step_ls[--pointer],towers=document.querySelectorAll(".tower"),source_tower,des_tower;applyChange(towers[step.b-1],towers[step.a-1])}));